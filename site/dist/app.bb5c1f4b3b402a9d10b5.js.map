{"version":3,"sources":["webpack:///app.bb5c1f4b3b402a9d10b5.js","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/services/update.service.ts","webpack:///./src/app/light/light.component.ts","webpack:///./src/app/skybox/skybox.component.ts","webpack:///./assets/textures/skySphere_2.jpg","webpack:///./src/app/services/loader.service.ts","webpack:///./src/app/services/physics.service.ts","webpack:///./assets/objects/bike_2.obj","webpack:///./assets/textures/tron.png","webpack:///./assets/objects/level_lennart_2.obj","webpack:///./assets/textures/road.jpg","webpack:///./src/app/app.component.html"],"names":["webpackJsonp","module","exports","__webpack_require__","platform_browser_dynamic_1","app_module_1","platformBrowserDynamic","bootstrapModule","AppModule","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","core_1","platform_browser_1","app_component_1","NgModule","imports","BrowserModule","declarations","AppComponent","bootstrap","THREE","update_service_1","light_component_1","skybox_component_1","loader_service_1","physics_service_1","_updateService","_lightComponent","_loader","_physicsService","_skyboxComponent","gui","speed","gravity","loaded","level","user","skybox","general","dt","last","keys","UP","DOWN","LEFT","RIGHT","state","dead","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","prototype","handleKeyDown","event","onKeyPress","handleKeyUp","down","keyCode","ngOnInit","_this","light","init","pointLight","addPointLight","player","playerText","loadOBJ","then","res","name","handleLoaded","levelText","skyBox","loadType","ready","x","setup","setupInitState","addObjectsToScene","addBoundingBoxesToScene","_canvas","nativeElement","appendChild","domElement","setupGravity","animate","position","copy","setSize","add","geometry2","BoxGeometry","material2","MeshBasicMaterial","visible","cube2","Mesh","y","now","Date","getTime","Math","min","death","render","requestAnimationFrame","update","obj","GravityCheck","g","ViewChild","ElementRef","HostListener","Function","KeyboardEvent","Component","selector","template","providers","UpdateService","LightComponent","SkyboxComponent","LoaderService","PhysicsService","call","acceleration","generalCarSpeedMultiplier","direction","X","Z","Y","car","step","rotateX","rotateY","quaternion","slerp","cos","rotation","z","sin","color","whiteColor","AmbientLight","DirectionalLight","skyGeo","SphereGeometry","loader","TextureLoader","Promise","resolve","reject","load","texture","material","MeshPhongMaterial","map","sky","side","BackSide","p","path","textureFile","manager","LoadingManager","onProgress","item","total","console","log","OBJLoader","wrapS","wrapT","RepeatWrapping","repeat","set","object","traverse","child","groundList","collidableMeshList","count","falltime","ground","children","geometry","push","deathBB","Box3","setFromObject","up","caster","Raycaster","rays","Vector3","collision","outcome","distance","playerBB","max","collisions","onlyeOne","intersectObject"],"mappings":"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","file":"app.bb5c1f4b3b402a9d10b5.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar platform_browser_dynamic_1 = __webpack_require__(1);\r\n\tvar app_module_1 = __webpack_require__(23);\r\n\tplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\r\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar platform_browser_1 = __webpack_require__(21);\r\n\tvar app_component_1 = __webpack_require__(24);\r\n\tvar AppModule = (function () {\r\n\t    function AppModule() {\r\n\t    }\r\n\t    return AppModule;\r\n\t}());\r\n\tAppModule = __decorate([\r\n\t    core_1.NgModule({\r\n\t        imports: [\r\n\t            platform_browser_1.BrowserModule\r\n\t        ],\r\n\t        declarations: [\r\n\t            app_component_1.AppComponent\r\n\t        ],\r\n\t        bootstrap: [app_component_1.AppComponent]\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [])\r\n\t], AppModule);\r\n\texports.AppModule = AppModule;\r\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(THREE) {\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar update_service_1 = __webpack_require__(26);\r\n\tvar light_component_1 = __webpack_require__(27);\r\n\tvar skybox_component_1 = __webpack_require__(28);\r\n\tvar loader_service_1 = __webpack_require__(30);\r\n\tvar physics_service_1 = __webpack_require__(31);\r\n\tvar AppComponent = (function () {\r\n\t    function AppComponent(_updateService, _lightComponent, _loader, _physicsService, _skyboxComponent) {\r\n\t        this._updateService = _updateService;\r\n\t        this._lightComponent = _lightComponent;\r\n\t        this._loader = _loader;\r\n\t        this._physicsService = _physicsService;\r\n\t        this._skyboxComponent = _skyboxComponent;\r\n\t        this.gui = {\r\n\t            speed: 0,\r\n\t            gravity: 0,\r\n\t        };\r\n\t        this.loaded = {\r\n\t            level: false,\r\n\t            user: false,\r\n\t            skybox: false,\r\n\t        };\r\n\t        this.general = {\r\n\t            dt: 0,\r\n\t            last: 0,\r\n\t        };\r\n\t        this.keys = {\r\n\t            UP: false,\r\n\t            DOWN: false,\r\n\t            LEFT: false,\r\n\t            RIGHT: false\r\n\t        };\r\n\t        this.state = {\r\n\t            dead: false\r\n\t        };\r\n\t        this.scene = new THREE.Scene();\r\n\t        this.camera = new THREE.PerspectiveCamera(75, 1280 / 720, 1, 200000);\r\n\t        this.renderer = new THREE.WebGLRenderer();\r\n\t    }\r\n\t    //***********************\r\n\t    //setup key handlers\r\n\t    //***********************\r\n\t    AppComponent.prototype.handleKeyDown = function (event) {\r\n\t        this.onKeyPress(event, true);\r\n\t    };\r\n\t    AppComponent.prototype.handleKeyUp = function (event) {\r\n\t        this.onKeyPress(event, false);\r\n\t    };\r\n\t    AppComponent.prototype.onKeyPress = function (event, down) {\r\n\t        if (event.key == 'w' || event.keyCode == 38) {\r\n\t            this.keys.UP = down;\r\n\t        }\r\n\t        else if (event.key == 's' || event.keyCode == 40) {\r\n\t            this.keys.DOWN = down;\r\n\t        }\r\n\t        else if (event.key == 'a' || event.keyCode == 37) {\r\n\t            this.keys.LEFT = down;\r\n\t        }\r\n\t        else if (event.key == 'd' || event.keyCode == 39) {\r\n\t            this.keys.RIGHT = down;\r\n\t        }\r\n\t    };\r\n\t    //***********************\r\n\t    //on component load\r\n\t    //***********************\r\n\t    AppComponent.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        this.light = this._lightComponent.init();\r\n\t        this.pointLight = this._lightComponent.addPointLight();\r\n\t        var player = __webpack_require__(32);\r\n\t        var playerText = __webpack_require__(33);\r\n\t        this._loader.loadOBJ(player, playerText).then(function (res) {\r\n\t            res.name = \"player\";\r\n\t            _this.player = res;\r\n\t            _this.handleLoaded(\"user\");\r\n\t        });\r\n\t        var level = __webpack_require__(34);\r\n\t        var levelText = __webpack_require__(35);\r\n\t        this._loader.loadOBJ(level, levelText).then(function (res) {\r\n\t            res.name = \"model\";\r\n\t            _this.level = res;\r\n\t            _this.handleLoaded(\"level\");\r\n\t        });\r\n\t        this._skyboxComponent.init().then(function (res) {\r\n\t            res.name = \"skyBox\";\r\n\t            _this.skyBox = res;\r\n\t            _this.handleLoaded(\"skybox\");\r\n\t        });\r\n\t    };\r\n\t    //handles async loading on components\r\n\t    AppComponent.prototype.handleLoaded = function (loadType) {\r\n\t        this.loaded[loadType] = true;\r\n\t        var ready = true;\r\n\t        for (var x in this.loaded) {\r\n\t            if (!this.loaded[x])\r\n\t                ready = false;\r\n\t        }\r\n\t        if (ready) {\r\n\t            this.setup();\r\n\t        }\r\n\t    };\r\n\t    //***********************\r\n\t    //setup\r\n\t    //***********************\r\n\t    AppComponent.prototype.setup = function () {\r\n\t        this.setupInitState();\r\n\t        this.addObjectsToScene();\r\n\t        this.addBoundingBoxesToScene();\r\n\t        this._canvas.nativeElement.appendChild(this.renderer.domElement);\r\n\t        this._physicsService.setupGravity(this.scene, 30);\r\n\t        this.animate();\r\n\t    };\r\n\t    AppComponent.prototype.setupInitState = function () {\r\n\t        this.skyBox.position.copy(this.camera.position);\r\n\t        this.pointLight.position.copy(this.camera.position);\r\n\t        this.renderer.setSize(1280, 720);\r\n\t    };\r\n\t    AppComponent.prototype.addObjectsToScene = function () {\r\n\t        this.scene.add(this.player);\r\n\t        this.scene.add(this.level);\r\n\t        this.scene.add(this.light);\r\n\t        this.scene.add(this.pointLight);\r\n\t        this.scene.add(this.skyBox);\r\n\t    };\r\n\t    AppComponent.prototype.addBoundingBoxesToScene = function () {\r\n\t        // const geometry = new THREE.BoxGeometry( 2500, 1, 65000 );\r\n\t        // const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n\t        // const cube = new THREE.Mesh( geometry, material );\r\n\t        // cube.position.y = -100;\r\n\t        // cube.name = \"ground\";\r\n\t        // this.scene.add( cube );\r\n\t        //\r\n\t        // const geometry3 = new THREE.BoxGeometry( 14000, 1, 2500 );\r\n\t        // const cube3 = new THREE.Mesh( geometry3, material );\r\n\t        // cube3.position.y = -100;\r\n\t        // cube3.position.x = -7000;\r\n\t        // cube3.position.z = -33000;\r\n\t        // cube3.name = \"ground\";\r\n\t        // this.scene.add( cube3 );\r\n\t        //\r\n\t        //\r\n\t        // const geometry4 = new THREE.BoxGeometry( 20000, 1, 2500 );\r\n\t        // const cube4 = new THREE.Mesh( geometry4, material );\r\n\t        // cube4.position.y = 675;\r\n\t        // cube4.position.x = -16000;\r\n\t        // cube4.position.z = -33000;\r\n\t        // cube4.rotation.z = -0.24;\r\n\t        // cube4.name = \"ground\";\r\n\t        // this.scene.add( cube4 );\r\n\t        //\r\n\t        var geometry2 = new THREE.BoxGeometry(60000, 1, 60000);\r\n\t        var material2 = new THREE.MeshBasicMaterial();\r\n\t        material2.visible = false;\r\n\t        var cube2 = new THREE.Mesh(geometry2, material2);\r\n\t        cube2.position.y = -2000;\r\n\t        cube2.name = \"death\";\r\n\t        this.scene.add(cube2);\r\n\t    };\r\n\t    //***********************\r\n\t    //animations\r\n\t    //***********************\r\n\t    AppComponent.prototype.animate = function () {\r\n\t        var _this = this;\r\n\t        var now = new Date().getTime();\r\n\t        this.general.dt = Math.min(1, (now - this.general.last) / 1000);\r\n\t        this.general.last = now;\r\n\t        var death = this.render();\r\n\t        if (!death) {\r\n\t            requestAnimationFrame(function () { return _this.animate(); });\r\n\t        }\r\n\t    };\r\n\t    AppComponent.prototype.render = function () {\r\n\t        this.gui.speed = this._updateService.update(this.player, this.camera, this.keys, this.general.dt);\r\n\t        var obj = this._physicsService.GravityCheck(this.player);\r\n\t        if (obj.d) {\r\n\t            this.state.dead = true;\r\n\t            return true;\r\n\t        }\r\n\t        this.gui.gravity = obj.g;\r\n\t        //keep skybox around bike\r\n\t        this.skyBox.position.copy(this.player.position);\r\n\t        this.renderer.render(this.scene, this.camera);\r\n\t        return false;\r\n\t    };\r\n\t    return AppComponent;\r\n\t}());\r\n\t__decorate([\r\n\t    core_1.ViewChild(\"canvas\"),\r\n\t    __metadata(\"design:type\", core_1.ElementRef)\r\n\t], AppComponent.prototype, \"_canvas\", void 0);\r\n\t__decorate([\r\n\t    core_1.HostListener('document:keydown', ['$event']),\r\n\t    __metadata(\"design:type\", Function),\r\n\t    __metadata(\"design:paramtypes\", [KeyboardEvent]),\r\n\t    __metadata(\"design:returntype\", void 0)\r\n\t], AppComponent.prototype, \"handleKeyDown\", null);\r\n\t__decorate([\r\n\t    core_1.HostListener('document:keyup', ['$event']),\r\n\t    __metadata(\"design:type\", Function),\r\n\t    __metadata(\"design:paramtypes\", [KeyboardEvent]),\r\n\t    __metadata(\"design:returntype\", void 0)\r\n\t], AppComponent.prototype, \"handleKeyUp\", null);\r\n\tAppComponent = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'app',\r\n\t        template: __webpack_require__(36),\r\n\t        providers: [update_service_1.UpdateService, light_component_1.LightComponent, skybox_component_1.SkyboxComponent, loader_service_1.LoaderService, physics_service_1.PhysicsService]\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [update_service_1.UpdateService,\r\n\t        light_component_1.LightComponent,\r\n\t        loader_service_1.LoaderService,\r\n\t        physics_service_1.PhysicsService,\r\n\t        skybox_component_1.SkyboxComponent])\r\n\t], AppComponent);\r\n\texports.AppComponent = AppComponent;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)))\n\n/***/ },\n/* 25 */,\n/* 26 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar UpdateService = (function () {\r\n\t    function UpdateService() {\r\n\t        this.acceleration = 0;\r\n\t        this.generalCarSpeedMultiplier = 1000;\r\n\t        this.direction = {\r\n\t            X: 0,\r\n\t            Z: 0,\r\n\t            Y: 0,\r\n\t        };\r\n\t    }\r\n\t    UpdateService.prototype.init = function () {\r\n\t    };\r\n\t    UpdateService.prototype.update = function (car, camera, keys, dt) {\r\n\t        var step = dt * this.generalCarSpeedMultiplier;\r\n\t        this.direction = {\r\n\t            X: 0,\r\n\t            Z: 0,\r\n\t            Y: 0,\r\n\t        };\r\n\t        if (this.acceleration > 0) {\r\n\t            this.acceleration -= 0.0012;\r\n\t        }\r\n\t        else {\r\n\t            this.acceleration += 0.0012;\r\n\t        }\r\n\t        if (keys.UP) {\r\n\t            if (this.acceleration < 4) {\r\n\t                if (this.acceleration < 0) {\r\n\t                    car.rotateX(0.004);\r\n\t                    this.acceleration += 0.03;\r\n\t                }\r\n\t                else {\r\n\t                    this.acceleration += 0.02;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (keys.DOWN) {\r\n\t            if (this.acceleration > -1.4) {\r\n\t                if (this.acceleration > 0) {\r\n\t                    this.acceleration -= 0.03;\r\n\t                }\r\n\t                else {\r\n\t                    this.acceleration -= 0.015;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (keys.LEFT) {\r\n\t            car.rotateY(0.02);\r\n\t        }\r\n\t        if (keys.RIGHT) {\r\n\t            car.rotateY(-0.02);\r\n\t        }\r\n\t        camera.quaternion.slerp(car.quaternion, 0.1);\r\n\t        if (Math.cos(car.rotation.z) > -1) {\r\n\t            this.direction.Z = step * this.acceleration * Math.cos(car.rotation.y);\r\n\t        }\r\n\t        else {\r\n\t            this.direction.Z = step * this.acceleration * -Math.cos(car.rotation.y);\r\n\t        }\r\n\t        this.direction.X = step * this.acceleration * Math.sin(car.rotation.y);\r\n\t        car.position.z -= this.direction.Z;\r\n\t        car.position.x -= this.direction.X;\r\n\t        car.position.y -= this.direction.Y;\r\n\t        camera.position.z -= this.direction.Z;\r\n\t        camera.position.x -= this.direction.X;\r\n\t        camera.position.y -= this.direction.Y;\r\n\t        camera.position.y = car.position.y + 200;\r\n\t        return this.acceleration;\r\n\t    };\r\n\t    return UpdateService;\r\n\t}());\r\n\texports.UpdateService = UpdateService;\r\n\t/*\r\n\t moves the camera and the car in a 3D space.\r\n\t Z is forward\r\n\t X is left/right.\r\n\t The car rotates and gives the offsetY to the car.\r\n\t\r\n\t Rotate X - up/down\r\n\t Rotate Y - Left/Right\r\n\t Rotate Z = turn screen\r\n\t */ \r\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(THREE) {\"use strict\";\r\n\tvar LightComponent = (function () {\r\n\t    function LightComponent() {\r\n\t        this.color = 0x404040;\r\n\t        this.whiteColor = 0xffffff;\r\n\t    }\r\n\t    LightComponent.prototype.init = function () {\r\n\t        return new THREE.AmbientLight(this.whiteColor, 1);\r\n\t    };\r\n\t    LightComponent.prototype.addPointLight = function () {\r\n\t        return new THREE.DirectionalLight(this.color, 1);\r\n\t    };\r\n\t    return LightComponent;\r\n\t}());\r\n\texports.LightComponent = LightComponent;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)))\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(THREE) {\"use strict\";\r\n\tvar SkyboxComponent = (function () {\r\n\t    function SkyboxComponent() {\r\n\t    }\r\n\t    SkyboxComponent.prototype.init = function () {\r\n\t        var skyGeo = new THREE.SphereGeometry(10000, 25, 25);\r\n\t        var loader = new THREE.TextureLoader();\r\n\t        return new Promise(function (resolve, reject) {\r\n\t            loader.load(__webpack_require__(29), function (texture) {\r\n\t                var material = new THREE.MeshPhongMaterial({\r\n\t                    map: texture,\r\n\t                });\r\n\t                var sky = new THREE.Mesh(skyGeo, material);\r\n\t                sky.material.side = THREE.BackSide;\r\n\t                resolve(sky);\r\n\t            });\r\n\t        });\r\n\t    };\r\n\t    return SkyboxComponent;\r\n\t}());\r\n\texports.SkyboxComponent = SkyboxComponent;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)))\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"assets/skySphere_2.66ae058ccbfea529122c6bdf47620ac5.jpg\";\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(THREE) {\"use strict\";\r\n\tvar LoaderService = (function () {\r\n\t    function LoaderService() {\r\n\t    }\r\n\t    LoaderService.prototype.loadOBJ = function (path, textureFile) {\r\n\t        var manager = new THREE.LoadingManager();\r\n\t        manager.onProgress = function (item, loaded, total) {\r\n\t            console.log(item, loaded, total);\r\n\t        };\r\n\t        var loader = new THREE.OBJLoader(manager);\r\n\t        var texture = new THREE.TextureLoader().load(textureFile);\r\n\t        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n\t        texture.repeat.set(2, 2);\r\n\t        return new Promise(function (resolve, reject) {\r\n\t            loader.load(path, function (object) {\r\n\t                object.traverse(function (child) {\r\n\t                    if (child instanceof THREE.Mesh) {\r\n\t                        child.material.map = texture;\r\n\t                    }\r\n\t                });\r\n\t                resolve(object);\r\n\t            });\r\n\t        });\r\n\t    };\r\n\t    return LoaderService;\r\n\t}());\r\n\texports.LoaderService = LoaderService;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)))\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(THREE) {\"use strict\";\r\n\tvar PhysicsService = (function () {\r\n\t    function PhysicsService() {\r\n\t        this.groundList = [];\r\n\t        this.gravity = 30;\r\n\t        this.collidableMeshList = [];\r\n\t        this.count = 0;\r\n\t        this.falltime = 0.4;\r\n\t    }\r\n\t    PhysicsService.prototype.setupGravity = function (scene, gravity) {\r\n\t        this.gravity = gravity;\r\n\t        var ground;\r\n\t        var death;\r\n\t        for (var x in scene.children) {\r\n\t            if (scene.children[x].name == 'model') {\r\n\t                var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n\t                this.level = new THREE.Mesh(scene.children[x].children[0].geometry, material);\r\n\t                this.level.position.y = 0;\r\n\t                // scene.add(this.level);\r\n\t                this.collidableMeshList.push(this.level);\r\n\t            }\r\n\t            if (scene.children[x].name == 'death') {\r\n\t                death = scene.children[x];\r\n\t                this.deathBB = new THREE.Box3().setFromObject(death);\r\n\t            }\r\n\t            if (scene.children[x].name == 'ground') {\r\n\t                console.log('added ground');\r\n\t                ground = scene.children[x];\r\n\t                this.groundList.push(new THREE.Box3().setFromObject(ground));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    PhysicsService.prototype.GravityCheck = function (player) {\r\n\t        var gravity = {\r\n\t            up: false,\r\n\t            down: true,\r\n\t        };\r\n\t        this.caster = new THREE.Raycaster();\r\n\t        this.rays = [\r\n\t            new THREE.Vector3(0, 0, 1),\r\n\t            new THREE.Vector3(0, 0, -1),\r\n\t            new THREE.Vector3(1, 0, 0),\r\n\t            new THREE.Vector3(1, 0, 1),\r\n\t            new THREE.Vector3(1, 0, -1),\r\n\t            new THREE.Vector3(-1, 0, 0),\r\n\t            new THREE.Vector3(-1, 0, 1),\r\n\t            new THREE.Vector3(-1, 0, -1),\r\n\t            new THREE.Vector3(0, 1, 0),\r\n\t            new THREE.Vector3(0, 1, 1),\r\n\t            new THREE.Vector3(0, 1, -1),\r\n\t            new THREE.Vector3(1, 1, 0),\r\n\t            new THREE.Vector3(-1, 1, 0),\r\n\t            new THREE.Vector3(0, -1, 0),\r\n\t            new THREE.Vector3(0, -1, 1),\r\n\t            new THREE.Vector3(0, -1, -1),\r\n\t            new THREE.Vector3(-1, -1, 0),\r\n\t            new THREE.Vector3(1, -1, 0),\r\n\t            new THREE.Vector3(0, 0, 0) //18 : none\r\n\t        ];\r\n\t        // Yep, this.rays[i] gives us :\r\n\t        // 0 => forward,\r\n\t        // 1 => forward-left,\r\n\t        // 2 => left,\r\n\t        // 3 => down-left\r\n\t        // 4 => down\r\n\t        // 5 => down-right\r\n\t        // 6 => right\r\n\t        // 7 => up-right\r\n\t        // 8 => above\r\n\t        // 9 => below\r\n\t        // 10 => above forward\r\n\t        // 11 => below forward\r\n\t        gravity = this.collision(player, gravity);\r\n\t        var outcome = 0;\r\n\t        if (gravity.up) {\r\n\t            outcome += this.distance;\r\n\t            this.falltime = 0.4;\r\n\t        }\r\n\t        if (gravity.down && !gravity.up) {\r\n\t            this.falltime += 0.004;\r\n\t            outcome -= 20 * this.falltime;\r\n\t        }\r\n\t        player.position.y += outcome;\r\n\t        var playerBB = new THREE.Box3().setFromObject(player);\r\n\t        var death = false;\r\n\t        // this.makeRect(playerBB);\r\n\t        if (playerBB.min.y < this.deathBB.max.y) {\r\n\t            death = true;\r\n\t        }\r\n\t        return { d: death, g: player.position.y };\r\n\t    };\r\n\t    PhysicsService.prototype.collision = function (player, g) {\r\n\t        var collisions, i, distance = 64;\r\n\t        var up = false;\r\n\t        var onlyeOne = true;\r\n\t        // console.log(this.level);\r\n\t        for (i = 0; i < this.rays.length; i += 1) {\r\n\t            this.caster.set(player.position, this.rays[i]);\r\n\t            // Test if we intersect with any obstacle mesh\r\n\t            collisions = this.caster.intersectObject(this.level);\r\n\t            // And disable that direction if we do\r\n\t            if (collisions.length > 0 && collisions[0].distance <= distance) {\r\n\t                if (i == 8 || i == 9 || i == 11 || i == 10 || i == 12) {\r\n\t                    up = true;\r\n\t                    if (i == 11 || i == 10 || i == 12) {\r\n\t                        onlyeOne = false;\r\n\t                    }\r\n\t                    else {\r\n\t                        if (i == 8) {\r\n\t                            this.distance = collisions[0].distance;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        return {\r\n\t            up: !onlyeOne,\r\n\t            down: true\r\n\t        };\r\n\t    };\r\n\t    return PhysicsService;\r\n\t}());\r\n\texports.PhysicsService = PhysicsService;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)))\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"assets/bike_2.c7f1bf100e585ceb1e1b7b83f5d58b60.obj\";\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"assets/tron.587552ce4be37cfd05ac08b4142849dd.png\";\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"assets/level_lennart_2.cab7d4088be847c0ce89fea322aae254.obj\";\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"assets/road.93905e756f18ec7cef67d3cc4f3fabd9.jpg\";\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div #canvas class=\\\"main\\\">\\n    <div class=\\\"gui\\\">\\n        <progress class=\\\"speed-progress\\\" max=\\\"400\\\" [value]=\\\"gui.speed * 100\\\"></progress>\\n        <i class=\\\"speed\\\">{{(gui.speed * 100).toFixed(0)}} km/h</i>\\n        <i class=\\\"gravity\\\">{{(gui.gravity.toFixed(0))}} m</i>\\n        <h2 [hidden]=\\\"!state.dead\\\">YOU DIEDEDEDED</h2>\\n    </div>\\n</div>\";\n\n/***/ }\n]);\n\n\n// WEBPACK FOOTER //\n// app.bb5c1f4b3b402a9d10b5.js","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/main.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\n@NgModule({\n    imports: [\n        BrowserModule\n    ],\n    declarations: [\n        AppComponent\n    ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/app.module.ts","import {Component, ViewChild, ElementRef, HostListener} from '@angular/core';\nimport {UpdateService} from \"./services/update.service\";\nimport {IKeyPress} from \"./interface\";\nimport {LightComponent} from \"./light/light.component\";\nimport {SkyboxComponent} from \"./skybox/skybox.component\";\nimport {LoaderService} from \"./services/loader.service\";\nimport {PhysicsService} from \"./services/physics.service\";\n\n\n@Component({\n    selector: 'app',\n    template: require('./app.component.html'),\n    providers : [UpdateService, LightComponent, SkyboxComponent, LoaderService, PhysicsService]\n})\nexport class AppComponent {\n    gui = {\n        speed : 0,\n        gravity : 0,\n    };\n\n    loaded = {\n        level: false,\n        user: false,\n        skybox: false,\n    };\n    \n    general = {\n        dt : 0,\n        last : 0,\n    };\n\n    keys : IKeyPress = {\n        UP: false,\n        DOWN: false,\n        LEFT: false,\n        RIGHT: false\n    };\n\n    player : THREE.Object3D;\n    light : THREE.Light;\n    pointLight : THREE.Light;\n    skyBox : THREE.Object3D;\n    level: THREE.Object3D;\n\n    state = {\n        dead : false\n    };\n\n\n    scene: any = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(75, 1280 / 720, 1, 200000);\n    renderer = new THREE.WebGLRenderer();\n\n    @ViewChild(\"canvas\") _canvas: ElementRef;\n\n    constructor(private _updateService: UpdateService,\n                private _lightComponent: LightComponent,\n                private _loader: LoaderService,\n                private _physicsService: PhysicsService,\n                private _skyboxComponent: SkyboxComponent) {\n\n    }\n\n    //***********************\n    //setup key handlers\n    //***********************\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeyDown(event: KeyboardEvent) {\n        this.onKeyPress(event, true);\n    }\n\n    @HostListener('document:keyup', ['$event'])\n    handleKeyUp(event: KeyboardEvent) {\n        this.onKeyPress(event, false);\n    }\n\n    onKeyPress(event: any, down:boolean) {\n        if (event.key == 'w' || event.keyCode == 38) {\n            this.keys.UP = down;\n        } else if (event.key == 's' || event.keyCode == 40) {\n            this.keys.DOWN = down;\n        } else if (event.key == 'a' || event.keyCode == 37) {\n            this.keys.LEFT = down;\n        } else if (event.key == 'd' || event.keyCode == 39) {\n            this.keys.RIGHT = down;\n        }\n    }\n\n    //***********************\n    //on component load\n    //***********************\n\n    ngOnInit() {\n        this.light = this._lightComponent.init();\n        this.pointLight = this._lightComponent.addPointLight();\n\n        const player = require(\"../../assets/objects/bike_2.obj\");\n        const playerText = require(\"../../assets/textures/tron.png\");\n        this._loader.loadOBJ(player, playerText).then(\n            (res: THREE.Object3D) => {\n                res.name = \"player\";\n                this.player = res;\n                this.handleLoaded(\"user\");\n            }\n        );\n\n        const level = require(\"../../assets/objects/level_lennart_2.obj\");\n        const levelText = require(\"../../assets/textures/road.jpg\");\n        this._loader.loadOBJ(level, levelText).then(\n            (res: THREE.Object3D) => {\n                res.name = \"model\";\n                this.level = res;\n                this.handleLoaded(\"level\");\n            }\n        );\n\n        this._skyboxComponent.init().then(\n            (res: THREE.Object3D) => {\n                res.name = \"skyBox\";\n                this.skyBox = res;\n                this.handleLoaded(\"skybox\");\n            }\n        );\n    }\n\n    //handles async loading on components\n    handleLoaded(loadType : string) {\n        this.loaded[loadType] = true;\n        let ready = true;\n\n        for (let x in this.loaded) {\n            if (!this.loaded[x]) ready = false;\n        }\n        if (ready) {\n            this.setup();\n        }\n    }\n\n    //***********************\n    //setup\n    //***********************\n\n\n    setup() {\n        this.setupInitState();\n        this.addObjectsToScene();\n        this.addBoundingBoxesToScene();\n        this._canvas.nativeElement.appendChild(this.renderer.domElement);\n        this._physicsService.setupGravity(this.scene, 30);\n        this.animate()\n    }\n\n    setupInitState() {\n        this.skyBox.position.copy(this.camera.position);\n        this.pointLight.position.copy(this.camera.position);\n        this.renderer.setSize(1280, 720);\n    }\n\n    addObjectsToScene() {\n        this.scene.add( this.player );\n        this.scene.add( this.level );\n        this.scene.add( this.light );\n        this.scene.add( this.pointLight );\n        this.scene.add( this.skyBox );\n    }\n\n    addBoundingBoxesToScene() {\n\n        // const geometry = new THREE.BoxGeometry( 2500, 1, 65000 );\n        // const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n        // const cube = new THREE.Mesh( geometry, material );\n        // cube.position.y = -100;\n        // cube.name = \"ground\";\n        // this.scene.add( cube );\n        //\n        // const geometry3 = new THREE.BoxGeometry( 14000, 1, 2500 );\n        // const cube3 = new THREE.Mesh( geometry3, material );\n        // cube3.position.y = -100;\n        // cube3.position.x = -7000;\n        // cube3.position.z = -33000;\n        // cube3.name = \"ground\";\n        // this.scene.add( cube3 );\n        //\n        //\n        // const geometry4 = new THREE.BoxGeometry( 20000, 1, 2500 );\n        // const cube4 = new THREE.Mesh( geometry4, material );\n        // cube4.position.y = 675;\n        // cube4.position.x = -16000;\n        // cube4.position.z = -33000;\n        // cube4.rotation.z = -0.24;\n        // cube4.name = \"ground\";\n        // this.scene.add( cube4 );\n        //\n        const geometry2 = new THREE.BoxGeometry( 60000, 1, 60000 );\n        const material2 = new THREE.MeshBasicMaterial();\n        material2.visible = false;\n        const cube2 = new THREE.Mesh( geometry2, material2 );\n        cube2.position.y = -2000;\n        cube2.name = \"death\";\n        this.scene.add( cube2 );\n    }\n\n    //***********************\n    //animations\n    //***********************\n\n    animate() {\n        const now = new Date().getTime();\n        this.general.dt = Math.min(1, (now - this.general.last) / 1000);\n        this.general.last = now;\n        const death = this.render();\n        if (!death) {\n            requestAnimationFrame(() => this.animate());\n        }\n    }\n\n    render() {\n        this.gui.speed = this._updateService.update(this.player, this.camera, this.keys, this.general.dt);\n        const obj = this._physicsService.GravityCheck(this.player);\n        if (obj.d) {\n            this.state.dead = true;\n            return true;\n        }\n        this.gui.gravity = obj.g;\n        //keep skybox around bike\n        this.skyBox.position.copy(this.player.position);\n        this.renderer.render(this.scene, this.camera);\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/app.component.ts","import {IKeyPress} from \"../interface\";\nexport class UpdateService {\n    acceleration: number = 0;\n    generalCarSpeedMultiplier: number =  1000;\n    direction = {\n        X: 0,\n        Z: 0,\n        Y : 0,\n    };\n\n    constructor() {\n\n    }\n\n    public init() {\n    }\n\n    public update(car :any, camera :any, keys: IKeyPress, dt :number) : number {\n        const step = dt * this.generalCarSpeedMultiplier;\n        this.direction = {\n            X: 0,\n            Z: 0,\n            Y: 0,\n        };\n\n        if (this.acceleration > 0) {\n            this.acceleration -= 0.0012;\n        } else {\n            this.acceleration += 0.0012;\n        }\n        if (keys.UP) {\n            if (this.acceleration < 4) {\n                if (this.acceleration < 0) {\n                    car.rotateX(0.004);\n                    this.acceleration += 0.03;\n                } else {\n                    this.acceleration += 0.02;\n                }\n            }\n        }\n        if (keys.DOWN) {\n            if (this.acceleration > -1.4) {\n                if (this.acceleration > 0) {\n                    this.acceleration -= 0.03;\n                } else {\n                    this.acceleration -= 0.015;\n                }\n            }\n        }\n        if (keys.LEFT) {\n            car.rotateY(0.02);\n        }\n\n        if (keys.RIGHT) {\n            car.rotateY(-0.02);\n        }\n        camera.quaternion.slerp(car.quaternion, 0.1);\n        if (Math.cos(car.rotation.z) > -1) {\n            this.direction.Z = step * this.acceleration * Math.cos(car.rotation.y);\n        } else {\n            this.direction.Z = step * this.acceleration * -Math.cos(car.rotation.y);\n        }\n\n        this.direction.X = step * this.acceleration * Math.sin(car.rotation.y);\n        car.position.z -= this.direction.Z;\n        car.position.x -= this.direction.X;\n        car.position.y -= this.direction.Y;\n\n        camera.position.z -= this.direction.Z;\n        camera.position.x -= this.direction.X;\n        camera.position.y -= this.direction.Y;\n\n        camera.position.y = car.position.y + 200;\n\n        return this.acceleration;\n    }\n\n\n}\n\n/*\n moves the camera and the car in a 3D space.\n Z is forward\n X is left/right.\n The car rotates and gives the offsetY to the car.\n\n Rotate X - up/down\n Rotate Y - Left/Right\n Rotate Z = turn screen\n */\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/update.service.ts","export class LightComponent {\n\n    color : number = 0x404040;\n    whiteColor : number = 0xffffff;\n\n    constructor() {\n\n    }\n\n    init() {\n        return new THREE.AmbientLight( this.whiteColor, 1 );\n    }\n\n    addPointLight() {\n        return new THREE.DirectionalLight( this.color, 1 )\n}\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/light/light.component.ts","import {ISkyBoxMapping} from \"../interface\";\nexport class SkyboxComponent {\n\n    init() {\n\n        const skyGeo = new THREE.SphereGeometry(10000, 25, 25);\n\n        const loader = new THREE.TextureLoader();\n        return new Promise(\n            (resolve, reject) => {\n                loader.load(require(\"../../../assets/textures/skySphere_2.jpg\"),\n                    (texture : any) => {\n                        const material = new THREE.MeshPhongMaterial({\n                            map: texture,\n                        });\n                        const sky = new THREE.Mesh(skyGeo, material);\n                        sky.material.side = THREE.BackSide;\n                        resolve(sky)\n                    });\n            }\n        )\n\n\n\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/skybox/skybox.component.ts","module.exports = __webpack_public_path__ + \"assets/skySphere_2.66ae058ccbfea529122c6bdf47620ac5.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/textures/skySphere_2.jpg\n// module id = 29\n// module chunks = 0","export class LoaderService {\n    constructor() {\n\n    }\n\n\n\n    loadOBJ(path : string, textureFile: string,) {\n        const manager = new THREE.LoadingManager();\n        manager.onProgress = function ( item, loaded, total ) {\n            console.log( item, loaded, total );\n        };\n        const loader = new THREE.OBJLoader( manager );\n        const texture = new THREE.TextureLoader().load(textureFile);\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n        texture.repeat.set( 2, 2 );\n\n        return new Promise((resolve, reject) => {\n            loader.load(path, (object : THREE.Object3D) => {\n                object.traverse( function ( child :any ) {\n                    if ( child instanceof THREE.Mesh ) {\n                        child.material.map = texture;\n                    }\n                });\n                resolve(object);\n            });\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/loader.service.ts","import {IGravityCheckReturn, IGravityObject} from \"../interface\";\nexport class PhysicsService {\n\n    groundList: THREE.Box3[] = [];\n    deathBB: THREE.Box3;\n    gravity: number = 30;\n    level: THREE.Mesh;\n    collidableMeshList: THREE.Mesh[] = [];\n\n    rays: THREE.Vector3[];\n    caster: THREE.Raycaster;\n    count : number = 0;\n    falltime : number = 0.4;\n\n\n    setupGravity(scene: THREE.Scene, gravity?: number) {\n        this.gravity = gravity;\n        let ground;\n        let death;\n        for (let x in scene.children) {\n            if (scene.children[x].name == 'model') {\n                const material = new THREE.MeshBasicMaterial({color: 0x00ff00});\n                this.level = new THREE.Mesh(scene.children[x].children[0].geometry, material);\n                this.level.position.y = 0;\n                // scene.add(this.level);\n                this.collidableMeshList.push(this.level);\n\n            }\n            if (scene.children[x].name == 'death') {\n                death = scene.children[x];\n                this.deathBB = new THREE.Box3().setFromObject(death);\n            }\n            if (scene.children[x].name == 'ground') {\n                console.log('added ground');\n                ground = scene.children[x];\n                this.groundList.push(new THREE.Box3().setFromObject(ground))\n            }\n        }\n    }\n\n    GravityCheck(player: THREE.Object3D): IGravityCheckReturn {\n\n        let gravity :IGravityObject = {\n            up : false,\n            down: true,\n        };\n\n\n        this.caster = new THREE.Raycaster();\n\n        this.rays = [\n            new THREE.Vector3(0, 0, 1),     //0: forward,\n            new THREE.Vector3(0, 0, -1),    //1 : backwards\n\n            new THREE.Vector3(1, 0, 0),     //2 : left\n            new THREE.Vector3(1, 0, 1),     //3 : forward left\n            new THREE.Vector3(1, 0, -1),    //4 : backwards left\n\n            new THREE.Vector3(-1, 0, 0),    //5 : right\n            new THREE.Vector3(-1, 0, 1),    //6 : forwards right\n            new THREE.Vector3(-1, 0, -1),   //7 : backwards right\n\n            new THREE.Vector3(0, 1, 0),     //8: above\n            new THREE.Vector3(0, 1, 1),     //9 : above - forward\n            new THREE.Vector3(0, 1, -1),    //10 : above - backward\n            new THREE.Vector3(1, 1, 0),     //11 : above - left\n            new THREE.Vector3(-1, 1, 0),    //12 : above - right\n\n            new THREE.Vector3(0, -1, 0),    //13 : below\n            new THREE.Vector3(0, -1, 1),    //14 : below - forward\n            new THREE.Vector3(0, -1, -1),   //15 : below - backward\n            new THREE.Vector3(-1, -1, 0),   //16 : below - right\n            new THREE.Vector3(1, -1, 0) ,   //17 : below - left\n\n            new THREE.Vector3(0, 0, 0)      //18 : none\n        ];\n        // Yep, this.rays[i] gives us :\n        // 0 => forward,\n        // 1 => forward-left,\n        // 2 => left,\n        // 3 => down-left\n        // 4 => down\n        // 5 => down-right\n        // 6 => right\n        // 7 => up-right\n        // 8 => above\n        // 9 => below\n        // 10 => above forward\n        // 11 => below forward\n\n        gravity = this.collision(player, gravity);\n\n        let outcome = 0;\n        if (gravity.up) {\n            outcome += this.distance;\n\n            this.falltime = 0.4;\n        }\n        if (gravity.down && !gravity.up) {\n            this.falltime += 0.004;\n            outcome -= 20 * this.falltime;\n        }\n\n        player.position.y += outcome;\n\n        const playerBB = new THREE.Box3().setFromObject(player);\n        let death = false;\n\n        // this.makeRect(playerBB);\n        if (playerBB.min.y < this.deathBB.max.y) {\n            death = true;\n        }\n        return {d: death, g: player.position.y}\n    }\n\n    distance : number;\n\n\n    collision(player: THREE.Object3D, g : IGravityObject) {\n        let collisions, i,\n            distance = 64;\n        let up = false;\n        let onlyeOne = true;\n        // console.log(this.level);\n        for (i = 0; i < this.rays.length; i += 1) {\n            this.caster.set(player.position, this.rays[i]);\n            // Test if we intersect with any obstacle mesh\n            collisions = this.caster.intersectObject(this.level);\n            // And disable that direction if we do\n            if (collisions.length > 0 && collisions[0].distance <= distance) {\n\n               if (i == 8 || i == 9 || i == 11 || i == 10 ||i == 12) {\n                   up = true;\n                   if (i == 11 || i == 10 ||i == 12) {\n                       onlyeOne = false;\n                   } else {\n                       if (i == 8) {\n                           this.distance = collisions[0].distance;\n                       }\n                   }\n                   // console.log(i);\n               }\n            }\n        }\n        return {\n            up : !onlyeOne,\n            down: true\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/physics.service.ts","module.exports = __webpack_public_path__ + \"assets/bike_2.c7f1bf100e585ceb1e1b7b83f5d58b60.obj\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/objects/bike_2.obj\n// module id = 32\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/tron.587552ce4be37cfd05ac08b4142849dd.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/textures/tron.png\n// module id = 33\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/level_lennart_2.cab7d4088be847c0ce89fea322aae254.obj\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/objects/level_lennart_2.obj\n// module id = 34\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/road.93905e756f18ec7cef67d3cc4f3fabd9.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/textures/road.jpg\n// module id = 35\n// module chunks = 0","module.exports = \"<div #canvas class=\\\"main\\\">\\n    <div class=\\\"gui\\\">\\n        <progress class=\\\"speed-progress\\\" max=\\\"400\\\" [value]=\\\"gui.speed * 100\\\"></progress>\\n        <i class=\\\"speed\\\">{{(gui.speed * 100).toFixed(0)}} km/h</i>\\n        <i class=\\\"gravity\\\">{{(gui.gravity.toFixed(0))}} m</i>\\n        <h2 [hidden]=\\\"!state.dead\\\">YOU DIEDEDEDED</h2>\\n    </div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 36\n// module chunks = 0"],"sourceRoot":""}