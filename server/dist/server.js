/// <reference path="../typings/index.d.ts" />
"use strict";
//****************
//imports
//****************
var bodyParser = require("body-parser");
var mongoose = require('mongoose');
var express = require("express");
var index_1 = require("./server/routes/index");
var index_2 = require("./server/api/index");
var index_3 = require("./server/socket/index");
//****************
//Setup
//****************
var app = express();
var server = require('http').Server(app);
var sio = require('socket.io')(server);
//****************
//middleware
//****************
app.use(bodyParser.json({ limit: '50mb' }));
app.use(bodyParser.urlencoded({ limit: '50mb', extended: true }));
app.use(express.static('../../site/dist'));
//****************
//Database
//****************
mongoose.connect('localhost:27017/game');
var db = mongoose.connection;
db.on('error', function (err) {
    console.log('Database gave an error.');
    console.log(err);
});
db.once('open', function () {
    console.log('The server is connected to a Mongo DataBase.');
});
//****************
//Server
//****************
var s = new index_3.Sockets();
var playerList = [];
sio.on('connection', function (socket) {
    socket.on('gameConnect', function (player, fn) {
        playerList = s.gameConnect(player, fn, socket, playerList);
    });
    socket.on('playerPosition', function (player, fn) {
        playerList = s.playerPosition(player, fn, socket, playerList);
    });
    socket.on('disconnect', function (player, fn) {
        console.log('disconnect');
        playerList = s.disconnect(player, fn, socket, playerList);
    });
});
//*************
//routing & api:
//*************
var Routes = new index_1.RoutesComponent();
var Api = new index_2.ApiComponent();
//Routing
//Home Page
app.get('/', Routes.home);
//API
app.post('/api/:type', function (req, res) {
    var type = req.params.type;
    var data = req.body.data;
    Api.request(data, res, type);
});
//*************
//Serving
//*************
server.listen(9900, function () {
    console.log('Extreme G Racing on port 9900');
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,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RSxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUE7SUFDN0QsQ0FBQyxDQUFDLENBQUM7QUFFUCxDQUFDLENBQUMsQ0FBQztBQUVILGVBQWU7QUFDZixnQkFBZ0I7QUFDaEIsZUFBZTtBQUVmLElBQUksTUFBTSxHQUFHLElBQUksdUJBQWUsRUFBRSxDQUFDO0FBQ25DLElBQUksR0FBRyxHQUFHLElBQUksb0JBQVksRUFBRSxDQUFDO0FBRTdCLFNBQVM7QUFDVCxXQUFXO0FBRVgsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRTFCLEtBQUs7QUFDTCxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxVQUFDLEdBQW9CLEVBQUUsR0FBcUI7SUFDL0QsSUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDN0IsSUFBTSxJQUFJLEdBQVMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDakMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFBO0FBQ2hDLENBQUMsQ0FBQyxDQUFDO0FBR0gsZUFBZTtBQUNmLFNBQVM7QUFDVCxlQUFlO0FBRWYsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7SUFDaEIsT0FBTyxDQUFDLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQyxDQUFBO0FBQ2hELENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6InNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi90eXBpbmdzL2luZGV4LmQudHNcIiAvPlxuXG4vLyoqKioqKioqKioqKioqKipcbi8vaW1wb3J0c1xuLy8qKioqKioqKioqKioqKioqXG5cbmltcG9ydCAqIGFzIGJvZHlQYXJzZXIgICAgICAgICAgICAgICAgICAgICAgZnJvbSBcImJvZHktcGFyc2VyXCI7XG5pbXBvcnQgKiBhcyBtb25nb29zZSAgICAgICAgICAgICAgICAgICAgICAgIGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCAqIGFzIGV4cHJlc3MgICAgICAgICAgICAgICAgICAgICAgICAgZnJvbSBcImV4cHJlc3NcIjtcblxuaW1wb3J0IHtSb3V0ZXNDb21wb25lbnR9ICAgICAgICAgICAgICAgICAgICBmcm9tIFwiLi9zZXJ2ZXIvcm91dGVzL2luZGV4XCI7XG5pbXBvcnQge0FwaUNvbXBvbmVudH0gICAgICAgICAgICAgICAgICAgICAgIGZyb20gXCIuL3NlcnZlci9hcGkvaW5kZXhcIjtcblxuaW1wb3J0IHtTb2NrZXRzfSAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tIFwiLi9zZXJ2ZXIvc29ja2V0L2luZGV4XCI7XG5pbXBvcnQge0lQbGF5ZXJPYmplY3R9ICAgICAgICAgICAgICAgICAgICAgIGZyb20gXCIuL2ludGVyZmFjZS5zZXJ2ZXJcIjtcblxuLy8qKioqKioqKioqKioqKioqXG4vL1NldHVwXG4vLyoqKioqKioqKioqKioqKipcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5jb25zdCBzZXJ2ZXIgPSByZXF1aXJlKCdodHRwJykuU2VydmVyKGFwcCk7XG5jb25zdCBzaW8gPSByZXF1aXJlKCdzb2NrZXQuaW8nKShzZXJ2ZXIpO1xuXG4vLyoqKioqKioqKioqKioqKipcbi8vbWlkZGxld2FyZVxuLy8qKioqKioqKioqKioqKioqXG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKHtsaW1pdDogJzUwbWInfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2xpbWl0OiAnNTBtYicsIGV4dGVuZGVkOiB0cnVlfSkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYygnLi4vLi4vc2l0ZS9kaXN0JykpO1xuXG4vLyoqKioqKioqKioqKioqKipcbi8vRGF0YWJhc2Vcbi8vKioqKioqKioqKioqKioqKlxuXG5tb25nb29zZS5jb25uZWN0KCdsb2NhbGhvc3Q6MjcwMTcvZ2FtZScpO1xuXG5jb25zdCBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XG5cbmRiLm9uKCdlcnJvcicsIChlcnIgOiBhbnkpID0+IHtcbiAgICBjb25zb2xlLmxvZygnRGF0YWJhc2UgZ2F2ZSBhbiBlcnJvci4nKTtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xufSk7XG5cbmRiLm9uY2UoJ29wZW4nLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ1RoZSBzZXJ2ZXIgaXMgY29ubmVjdGVkIHRvIGEgTW9uZ28gRGF0YUJhc2UuJylcbn0pO1xuXG4vLyoqKioqKioqKioqKioqKipcbi8vU2VydmVyXG4vLyoqKioqKioqKioqKioqKipcblxuY29uc3QgcyA9IG5ldyBTb2NrZXRzKCk7XG5sZXQgcGxheWVyTGlzdCA6IElQbGF5ZXJPYmplY3RbXSA9IFtdO1xuXG5zaW8ub24oJ2Nvbm5lY3Rpb24nLCBzb2NrZXQgPT4ge1xuICAgIHNvY2tldC5vbignZ2FtZUNvbm5lY3QnLCAocGxheWVyLCBmbikgPT4ge1xuICAgICAgICBwbGF5ZXJMaXN0ID0gcy5nYW1lQ29ubmVjdChwbGF5ZXIsIGZuLCBzb2NrZXQsIHBsYXllckxpc3QpXG4gICAgfSk7XG4gICAgc29ja2V0Lm9uKCdwbGF5ZXJQb3NpdGlvbicsIChwbGF5ZXIsIGZuKSA9PiB7XG4gICAgICAgIHBsYXllckxpc3QgPSBzLnBsYXllclBvc2l0aW9uKHBsYXllciwgZm4sIHNvY2tldCwgcGxheWVyTGlzdClcbiAgICB9KTtcbiAgICBzb2NrZXQub24oJ2Rpc2Nvbm5lY3QnLCAocGxheWVyLCBmbikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnZGlzY29ubmVjdCcpO1xuICAgICAgICBwbGF5ZXJMaXN0ID0gcy5kaXNjb25uZWN0KHBsYXllciwgZm4sIHNvY2tldCwgcGxheWVyTGlzdClcbiAgICB9KTtcblxufSk7XG5cbi8vKioqKioqKioqKioqKlxuLy9yb3V0aW5nICYgYXBpOlxuLy8qKioqKioqKioqKioqXG5cbmxldCBSb3V0ZXMgPSBuZXcgUm91dGVzQ29tcG9uZW50KCk7XG5sZXQgQXBpID0gbmV3IEFwaUNvbXBvbmVudCgpO1xuXG4vL1JvdXRpbmdcbi8vSG9tZSBQYWdlXG5cbmFwcC5nZXQoJy8nLCBSb3V0ZXMuaG9tZSk7XG5cbi8vQVBJXG5hcHAucG9zdCgnL2FwaS86dHlwZScsIChyZXE6IGV4cHJlc3MuUmVxdWVzdCwgcmVzOiBleHByZXNzLlJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3QgdHlwZSA9IHJlcS5wYXJhbXMudHlwZTtcbiAgICBjb25zdCBkYXRhIDogYW55ID0gcmVxLmJvZHkuZGF0YTtcbiAgICBBcGkucmVxdWVzdChkYXRhLCByZXMsIHR5cGUpXG59KTtcblxuXG4vLyoqKioqKioqKioqKipcbi8vU2VydmluZ1xuLy8qKioqKioqKioqKioqXG5cbnNlcnZlci5saXN0ZW4oOTkwMCwgZnVuY3Rpb24gKCkge1xuICAgIGNvbnNvbGUubG9nKCdFeHRyZW1lIEcgUmFjaW5nIG9uIHBvcnQgOTkwMCcpXG59KTsiXX0=
